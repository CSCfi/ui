:host {
  /**
   * @prop --c-progress-bar-color: Progress bar color
   * @prop --c-progress-bar-background-color: Progress bar background color
   * @prop --c-progress-bar-border-width: Progress bar border width in px
   * @prop --c-progress-bar-height: Progress bar height in px
   * @prop --c-progress-bar-value: Progress bar value in %
   */
  --_c-progress-bar-color: var(--c-progress-bar-color, var(--c-primary-600));
  --_c-progress-bar-background-color: var(--c-progress-bar-background-color, var(--c-tertiary-200));
  --_c-progress-bar-border-width: var(--c-progress-bar-border-width, 4px);
  --_c-progress-bar-height: var(--c-progress-bar-height, 16px);
  --_c-progress-bar-value: var(--c-progress-bar-value, 0%);

  align-items: center;
  display: flex;
  flex-wrap: wrap;
}

.c-progress {
  $this: &;

  position: relative;
  background-color: var(--_c-progress-bar-background-color);
  border-radius: var(--_c-progress-bar-height);
  box-shadow: 0 0 0 var(--_c-progress-bar-border-width)
    var(--_c-progress-bar-background-color);
  flex-basis: 100%;
  height: calc(
    var(--_c-progress-bar-height) - calc(var(--_c-progress-bar-border-width) * 2)
  );
  margin: var(--_c-progress-bar-border-width);
  opacity: 0.75;
  overflow: hidden;
  transform: translateZ(0); // Safari - overflow: hidden & border-radius fix
  width: calc(100% - calc(var(--_c-progress-bar-border-width) * 2));

  &.adjacent-details {
    flex: 1;
  }

  &__percentage {
    flex-basis: 100%;
    font-size: 14px;
    margin-top: 2px;
    text-align: end;
    white-space: nowrap;
    padding-left: 16px;

    &--negative {
      color: var(--c-error-600);
    }

    &.adjacent-details {
      flex: 0;
    }
  }

  progress {
    background-color: var(--_c-progress-bar-color);
    border-radius: var(--_c-progress-bar-height);
    width: 100%;
    overflow: hidden;
    height: calc(
      var(--_c-progress-bar-height) - calc(var(--_c-progress-bar-border-width) * 2)
    );
    position: absolute;
    border: none;

    @supports selector(:focus-within) {
      &:focus {
        outline: none;
      }
    }
  }

  &:focus-within {
    outline: 2px var(--c-primary-600) solid;
    outline-offset: 6px;
  }

  ::-webkit-progress-bar {
    background-color: transparent;
  }

  ::-webkit-progress-value {
    transition: width 0.3s ease-in-out;
    background-color: var(--_c-progress-bar-color);
    border-radius: var(--_c-progress-bar-height);
  }

  ::-moz-progress-bar {
    transition: padding-bottom 1s;
    padding-left: 60px;
    padding-bottom: var(--_c-progress-bar-value);
    background-color: var(--_c-progress-bar-color);
    height: 0;
    transform-origin: 0 0;
    transform: rotate(-90deg) translateX(-60px);
  }

  /* Force indeterminate bars to have zero width */
  :indeterminate::-moz-progress-bar {
    width: 0;
  }

  &--indeterminate {
    &::before {
      content: "";
      position: absolute;
      background-color: var(--_c-progress-bar-color);
      border-radius: var(--_c-progress-bar-height);
      left: -100%;
      height: 100%;
      transform: translateX(var(--_c-progress-bar-value, 0%));
      transition: transform 0.3s ease-in-out;
      animation: indeterminate 2s infinite linear;
      width: 50%;
      transform-origin: 0% 50%;
    }
  }
}

@keyframes indeterminate {
  0% {
    transform: translateX(100%) scaleX(1);
  }

  30% {
    transform: translateX(170%) scaleX(1.75);
  }

  70% {
    transform: translateX(500%) scaleX(0.1);
  }

  100% {
    transform: translateX(500%) scaleX(0.1);
  }
}
