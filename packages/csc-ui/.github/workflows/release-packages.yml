name: Release Action

on:
  pull_request:
    branches:
      - master
    types:
      - closed

jobs:
  release:
    runs-on: ubuntu-latest
    if: "!contains(github.event.pull_request.title, 'Automated') && !contains(github.event.head_commit.message, 'ci skip') && !contains(github.event.head_commit.message, 'skip ci') && github.event.pull_request.merged == true"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: NPM version bump (patch)
        run: |
          git config --global user.email "suiteamsui@gmail.com"
          git config --global user.name "My CSC Team"
          npm version patch -m "Bump version to %s"
          git tag
          git push --tags
        if: contains(github.event.pull_request.labels.*.name, 'patch')

      - name: Install dependencies and build packages
        run: |
          npm i && npm run predeploy

      - name: Build changelog
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          git fetch --tags
          npx auto changelog --base-branch master

      # - name: Build Github release
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
      #     NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      #   run: |
      #     npx auto release --base-branch master

      - name: Publish Package
        uses: JS-DevTools/npm-publish@v1
        with:
          token: ${{ secrets.NPM_TOKEN }}

      - uses: Saionaro/extract-package-version@v1.2.1
        id: package-version

      - name: setup Firebase
        uses: pocket-apps/action-setup-firebase@v2
        with:
          firebase-token: ${{ secrets.FIREBASE_TOKEN }}

      - name: Publish documentation
        run: npm run deploy:documentation

      - name: create pull request
        id: open-pr
        uses: repo-sync/pull-request@v2
        with:
          github_token: ${{ secrets.GH_TOKEN }}
          destination_branch: ${{ github.event.repository.default_branch }}
          pr_title: '[Automated] Merge ${{ steps.package-version.outputs.version }} into ${{ github.event.repository.default_branch }}'
          pr_body: 'Automated Pull Request'
          pr_reviewer: ${{ secrets.MERGE_USER }}
          pr_assignee: ${{ secrets.MERGE_USER }}

      # - name: Build Changelog
      #   id: github_release
      #   uses: mikepenz/release-changelog-builder-action@v3
      #   with:
      #     configuration: 'changelog.config.json'
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

      # - name: Print changelog
      #   run: |
      #     echo ${{steps.github_release.outputs.changelog}}
      #     echo '--------------------------------'
      #     echo ${{steps.github_release.outputs.commits}}

      # - name: Create Release
      #   uses: mikepenz/action-gh-release@v0.2.0-a03
      #   with:
      #     body: ${{steps.github_release.outputs.changelog}}
      #     tag_name: 'v${{ steps.package-version.outputs.version }}'
